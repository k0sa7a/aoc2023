; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
;
; Starting Jack-in Terminal: pushd /home/k0sa7a/code/k0sa7a/aoc2023 ; lein update-in :dependencies conj '[nrepl,"1.0.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.28.5"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- with-profile +uberjar repl :headless ; popd
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
;
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
;
; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
;
; Starting Jack-in Terminal: pushd /home/k0sa7a/code/k0sa7a/aoc2023 ; lein update-in :dependencies conj '[nrepl,"1.0.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.28.5"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- with-profile +uberjar repl :headless ; popd
; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
;
; Starting Jack-in Terminal: pushd /home/k0sa7a/code/k0sa7a/aoc2023 ; lein update-in :dependencies conj '[nrepl,"1.0.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.28.5"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- with-profile +uberjar repl :headless ; popd
; Connecting using "undefined" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
;
; Aborting connect, error determining connect sequence.
; Evaluating file: part2.clj
INDEX FROM winning check 0
INDEX within IF check 0
INDEX FROM winning check 0
INDEX FROM winning check 0
IND-ROW [1 2 3 4]
INDEX FROM winning check 0
IND-ROW [1 2 3 4]
INDEX FROM winning check 0
IND-ROW [1 2 3 4]
INDEX FROM winning check 0
IND-ROW [1 2 3 4]
DEEP DEEEP  (inc index) 1
INDEX FROM winning check 0
DEEP DEEEP  (+ index (inc (check-winning-numbers-count index))) 5
----
INDEX FROM winning check 0
INDEX FROM winning check 1
INDEX within IF check 1
INDEX FROM winning check 1
INDEX FROM winning check 1
IND-ROW [2 3]
INDEX FROM winning check 1
IND-ROW [2 3]
DEEP DEEEP  (inc index) 2
INDEX FROM winning check 1
DEEP DEEEP  (+ index (inc (check-winning-numbers-count index))) 4
----
INDEX FROM winning check 1
INDEX FROM winning check 2
INDEX within IF check 2
INDEX FROM winning check 2
INDEX FROM winning check 2
IND-ROW [3 4]
INDEX FROM winning check 2
IND-ROW [3 4]
DEEP DEEEP  (inc index) 3
INDEX FROM winning check 2
DEEP DEEEP  (+ index (inc (check-winning-numbers-count index))) 5
----
INDEX FROM winning check 2
INDEX FROM winning check 3
INDEX within IF check 3
INDEX FROM winning check 3
INDEX FROM winning check 3
IND-ROW [4]
DEEP DEEEP  (inc index) 4
INDEX FROM winning check 3
DEEP DEEEP  (+ index (inc (check-winning-numbers-count index))) 5
----
INDEX FROM winning check 3
INDEX FROM winning check 4
INDEX FROM winning check 4
INDEX FROM winning check 3
INDEX within IF check 3
INDEX FROM winning check 3
INDEX FROM winning check 3
IND-ROW [4]
DEEP DEEEP  (inc index) 4
INDEX FROM winning check 3
DEEP DEEEP  (+ index (inc (check-winning-numbers-count index))) 5
----
INDEX FROM winning check 3
INDEX FROM winning check 4
INDEX FROM winning check 2
INDEX within IF check 2
INDEX FROM winning check 2
INDEX FROM winning check 2
IND-ROW [3 4]
INDEX FROM winning check 2
IND-ROW [3 4]
DEEP DEEEP  (inc index) 3
INDEX FROM winning check 2
DEEP DEEEP  (+ index (inc (check-winning-numbers-count index))) 5
----
INDEX FROM winning check 2
INDEX FROM winning check 3
INDEX within IF check 3
INDEX FROM winning check 3
INDEX FROM winning check 3
IND-ROW [4]
DEEP DEEEP  (inc index) 4
INDEX FROM winning check 3
DEEP DEEEP  (+ index (inc (check-winning-numbers-count index))) 5
----
INDEX FROM winning check 3
INDEX FROM winning check 4
INDEX FROM winning check 4
INDEX FROM winning check 3
INDEX within IF check 3
INDEX FROM winning check 3
INDEX FROM winning check 3
IND-ROW [4]
DEEP DEEEP  (inc index) 4
INDEX FROM winning check 3
DEEP DEEEP  (+ index (inc (check-winning-numbers-count index))) 5
----
INDEX FROM winning check 3
INDEX FROM winning check 4
INDEX FROM winning check 4
INDEX FROM winning check 1
INDEX within IF check 1
INDEX FROM winning check 1
INDEX FROM winning check 1
IND-ROW [2 3]
INDEX FROM winning check 1
IND-ROW [2 3]
DEEP DEEEP  (inc index) 2
INDEX FROM winning check 1
DEEP DEEEP  (+ index (inc (check-winning-numbers-count index))) 4
----
INDEX FROM winning check 1
INDEX FROM winning check 2
INDEX within IF check 2
INDEX FROM winning check 2
INDEX FROM winning check 2
IND-ROW [3 4]
INDEX FROM winning check 2
IND-ROW [3 4]
DEEP DEEEP  (inc index) 3
INDEX FROM winning check 2
DEEP DEEEP  (+ index (inc (check-winning-numbers-count index))) 5
----
INDEX FROM winning check 2
INDEX FROM winning check 3
INDEX within IF check 3
INDEX FROM winning check 3
INDEX FROM winning check 3
IND-ROW [4]
DEEP DEEEP  (inc index) 4
INDEX FROM winning check 3
DEEP DEEEP  (+ index (inc (check-winning-numbers-count index))) 5
----
INDEX FROM winning check 3
INDEX FROM winning check 4
INDEX FROM winning check 4
INDEX FROM winning check 3
INDEX within IF check 3
INDEX FROM winning check 3
INDEX FROM winning check 3
IND-ROW [4]
DEEP DEEEP  (inc index) 4
INDEX FROM winning check 3
DEEP DEEEP  (+ index (inc (check-winning-numbers-count index))) 5
----
INDEX FROM winning check 3
INDEX FROM winning check 4
INDEX FROM winning check 2
INDEX within IF check 2
INDEX FROM winning check 2
INDEX FROM winning check 2
IND-ROW [3 4]
INDEX FROM winning check 2
IND-ROW [3 4]
DEEP DEEEP  (inc index) 3
INDEX FROM winning check 2
DEEP DEEEP  (+ index (inc (check-winning-numbers-count index))) 5
----
INDEX FROM winning check 2
INDEX FROM winning check 3
INDEX within IF check 3
INDEX FROM winning check 3
INDEX FROM winning check 3
IND-ROW [4]
DEEP DEEEP  (inc index) 4
INDEX FROM winning check 3
DEEP DEEEP  (+ index (inc (check-winning-numbers-count index))) 5
----
INDEX FROM winning check 3
INDEX FROM winning check 4
INDEX FROM winning check 4
INDEX FROM winning check 3
INDEX within IF check 3
INDEX FROM winning check 3
INDEX FROM winning check 3
IND-ROW [4]
DEEP DEEEP  (inc index) 4
INDEX FROM winning check 3
DEEP DEEEP  (+ index (inc (check-winning-numbers-count index))) 5
----
INDEX FROM winning check 3
INDEX FROM winning check 4
INDEX FROM winning check 4
INDEX FROM winning check 5
INDEX FROM winning check 6
; Execution error (IndexOutOfBoundsException) at aoc2023.day04.part2/check-winning-numbers-count (part2.clj:16).
; null
; Evaluation of file part2.clj failed: class clojure.lang.Compiler$CompilerException
clj꞉aoc2023.day04.part2꞉> 
